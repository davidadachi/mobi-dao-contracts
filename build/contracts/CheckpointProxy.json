{
  "abi": [
    {
      "gas": 1442,
      "inputs": [
        {
          "name": "_gauge",
          "type": "address"
        }
      ],
      "name": "checkpoint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/gauges/sidechain/CheckpointProxy.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [],
              "ast_type": "arguments",
              "col_offset": 4,
              "default": null,
              "defaults": [],
              "end_col_offset": 7,
              "end_lineno": 10,
              "lineno": 10,
              "node_id": 5,
              "src": "193:3:3"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 30,
                "end_col_offset": 40,
                "end_lineno": 10,
                "lineno": 10,
                "node_id": 6,
                "src": "219:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 40,
                  "end_lineno": 10,
                  "id": "nonpayable",
                  "lineno": 10,
                  "node_id": 7,
                  "src": "219:10:3"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 40,
            "end_lineno": 10,
            "lineno": 10,
            "name": "checkpoint",
            "node_id": 4,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 28,
              "end_lineno": 10,
              "id": "bool",
              "lineno": 10,
              "node_id": 9,
              "src": "213:4:3"
            },
            "src": "193:36:3"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 40,
        "end_lineno": 10,
        "lineno": 9,
        "name": "RootGauge",
        "node_id": 3,
        "src": "168:61:3"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 14,
                "id": "address",
                "lineno": 14,
                "node_id": 14,
                "src": "265:7:3"
              },
              "arg": "_gauge",
              "ast_type": "arg",
              "col_offset": 15,
              "end_col_offset": 30,
              "end_lineno": 14,
              "lineno": 14,
              "node_id": 13,
              "src": "257:15:3"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 15,
          "default": null,
          "defaults": [],
          "end_col_offset": 30,
          "end_lineno": 14,
          "lineno": 14,
          "node_id": 12,
          "src": "257:15:3"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 17,
            "lineno": 17,
            "msg": null,
            "node_id": 16,
            "src": "434:30:3",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 17,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 17,
                "lineno": 17,
                "node_id": 18,
                "src": "441:10:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 17,
                  "id": "msg",
                  "lineno": 17,
                  "node_id": 19,
                  "src": "441:3:3"
                }
              },
              "lineno": 17,
              "node_id": 17,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 17,
                "lineno": 17,
                "node_id": 22,
                "src": "441:23:3"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "origin",
                "col_offset": 25,
                "end_col_offset": 34,
                "end_lineno": 17,
                "lineno": 17,
                "node_id": 23,
                "src": "455:9:3",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 27,
                  "end_lineno": 17,
                  "id": "tx",
                  "lineno": 17,
                  "node_id": 24,
                  "src": "455:2:3"
                }
              },
              "src": "441:23:3"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 19,
            "lineno": 19,
            "node_id": 27,
            "src": "470:30:3",
            "value": {
              "args": [],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 34,
              "end_lineno": 19,
              "func": {
                "ast_type": "Attribute",
                "attr": "checkpoint",
                "col_offset": 4,
                "end_col_offset": 32,
                "end_lineno": 19,
                "lineno": 19,
                "node_id": 29,
                "src": "470:28:3",
                "value": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 14,
                      "end_col_offset": 20,
                      "end_lineno": 19,
                      "id": "_gauge",
                      "lineno": 19,
                      "node_id": 33,
                      "src": "480:6:3"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 4,
                  "end_col_offset": 21,
                  "end_lineno": 19,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 13,
                    "end_lineno": 19,
                    "id": "RootGauge",
                    "lineno": 19,
                    "node_id": 31,
                    "src": "470:9:3"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 19,
                  "node_id": 30,
                  "src": "470:17:3"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 19,
              "node_id": 28,
              "src": "470:30:3"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 20,
            "lineno": 20,
            "node_id": 36,
            "src": "505:11:3",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 20,
              "lineno": 20,
              "node_id": 37,
              "src": "512:4:3",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 13,
            "id": "external",
            "lineno": 13,
            "node_id": 38,
            "src": "233:8:3"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 20,
        "lineno": 14,
        "name": "checkpoint",
        "node_id": 11,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 35,
          "end_col_offset": 39,
          "end_lineno": 14,
          "id": "bool",
          "lineno": 14,
          "node_id": 40,
          "src": "277:4:3"
        },
        "src": "242:274:3"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 7,
      "lineno": 2,
      "node_id": 42,
      "src": "18:148:3",
      "value": "\n@title Checkpoint Proxy\n@author Mobius.Fi\n@license MIT\n@notice Calls `checkpoint` on Anyswap gauges to meet bridge whitelisting requirements\n"
    },
    "end_col_offset": 15,
    "end_lineno": 20,
    "lineno": 1,
    "name": "contracts/gauges/sidechain/CheckpointProxy.vy",
    "node_id": 0,
    "src": "0:516:3"
  },
  "bytecode": "0x61009756600436101561000d5761008d565b600035601c52600051341561002157600080fd5b63a972985e81141561008b5760043560a01c1561003d57600080fd5b32331461004957600080fd5b60206101a0600463c2c4c5c16101405261015c60006004355af161006c57600080fd5b601f3d1161007957600080fd5b6000506101a050600160005260206000f35b505b60006000fd5b61000461009703610004600039610004610097036000f3",
  "bytecodeSha1": "6ddd6001b1aa205681fb0774f354ba8d323bf90b",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "CheckpointProxy",
  "coverageMap": {
    "branches": {
      "0": {
        "CheckpointProxy.checkpoint": {
          "1": [
            434,
            464,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "CheckpointProxy.checkpoint": {
          "0": [
            434,
            464
          ],
          "2": [
            470,
            500
          ],
          "3": [
            505,
            516
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d5761008d565b600035601c52600051341561002157600080fd5b63a972985e81141561008b5760043560a01c1561003d57600080fd5b32331461004957600080fd5b60206101a0600463c2c4c5c16101405261015c60006004355af161006c57600080fd5b601f3d1161007957600080fd5b6000506101a050600160005260206000f35b505b60006000fd",
  "deployedSourceMap": "-1:-1:3:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;242:274;;;;;:::-;-1:-1;;;;;242:274;:::-;;;;:::-;455:9;441:10;:23;434:30;:::-;;;;:::-;470;;;-1:-1;;;;470:30;480:6;470:30;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;242:274;470:30;242:274;512:4;505:11;;;;;242:274::-;-1:-1;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "author": "Mobius.Fi",
    "license": "MIT",
    "methods": {},
    "notice": "Calls `checkpoint` on Anyswap gauges to meet bridge whitelisting requirements",
    "title": "Checkpoint Proxy"
  },
  "offset": [
    0,
    517
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x08D JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xA972985E DUP2 EQ ISZERO PUSH2 0x08B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x03D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0x049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH2 0x1A0 PUSH1 0x4 PUSH4 0xC2C4C5C1 PUSH2 0x140 MSTORE PUSH2 0x15C PUSH1 0x0 PUSH1 0x4 CALLDATALOAD GAS CALL PUSH2 0x06C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1A0 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x08D"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "op": "CALLVALUE"
    },
    "24": {
      "op": "ISZERO"
    },
    "25": {
      "op": "PUSH2",
      "value": "0x021"
    },
    "28": {
      "op": "JUMPI"
    },
    "29": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "31": {
      "offset": [
        0,
        0
      ],
      "op": "DUP1",
      "path": "0"
    },
    "32": {
      "dev": "Cannot send ether to nonpayable function",
      "op": "REVERT"
    },
    "33": {
      "op": "JUMPDEST"
    },
    "34": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA972985E"
    },
    "39": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "40": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "EQ",
      "path": "0"
    },
    "41": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "42": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x08B"
    },
    "45": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "48": {
      "op": "CALLDATALOAD"
    },
    "49": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "51": {
      "op": "SHR"
    },
    "52": {
      "op": "ISZERO"
    },
    "53": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x03D"
    },
    "56": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "57": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "59": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "60": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "REVERT",
      "path": "0"
    },
    "61": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "62": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        455,
        464
      ],
      "op": "ORIGIN",
      "path": "0",
      "statement": 0
    },
    "63": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        441,
        451
      ],
      "op": "CALLER",
      "path": "0"
    },
    "64": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        441,
        464
      ],
      "op": "EQ",
      "path": "0"
    },
    "65": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x049"
    },
    "68": {
      "branch": 1,
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "69": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "71": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "72": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "REVERT",
      "path": "0"
    },
    "73": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        434,
        464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "74": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x20"
    },
    "76": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "79": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "81": {
      "op": "PUSH4",
      "value": "0xC2C4C5C1"
    },
    "86": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "89": {
      "op": "MSTORE"
    },
    "90": {
      "op": "PUSH2",
      "value": "0x15C"
    },
    "93": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "95": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        480,
        486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "97": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "98": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "GAS",
      "path": "0"
    },
    "99": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "CALL",
      "path": "0"
    },
    "100": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x06C"
    },
    "103": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "104": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "106": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "107": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "REVERT",
      "path": "0"
    },
    "108": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "109": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "111": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "112": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "GT",
      "path": "0"
    },
    "113": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x079"
    },
    "116": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "117": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "119": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "REVERT",
      "path": "0"
    },
    "121": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "122": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "124": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "POP",
      "path": "0"
    },
    "125": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        470,
        500
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "128": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "POP",
      "path": "0"
    },
    "129": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        512,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "131": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        505,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "133": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        505,
        516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "134": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        505,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "136": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        505,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        505,
        516
      ],
      "op": "RETURN",
      "path": "0"
    },
    "139": {
      "fn": "CheckpointProxy.checkpoint",
      "offset": [
        242,
        516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "140": {
      "op": "POP"
    },
    "141": {
      "op": "JUMPDEST"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "146": {
      "op": "REVERT"
    }
  },
  "sha1": "dd3355c40f065dc37822fe91741f009a6c65f57a",
  "source": "# @version 0.2.12\n\"\"\"\n@title Checkpoint Proxy\n@author Mobius.Fi\n@license MIT\n@notice Calls `checkpoint` on Anyswap gauges to meet bridge whitelisting requirements\n\"\"\"\n\ninterface RootGauge:\n    def checkpoint() -> bool: nonpayable\n\n\n@external\ndef checkpoint(_gauge: address) -> bool:\n    # anyswap bridge cannot handle multiple transfers in one call, so we\n    # block smart contracts that could checkpoint multiple gauges at once\n    assert msg.sender == tx.origin\n\n    RootGauge(_gauge).checkpoint()\n    return True\n",
  "sourceMap": "",
  "sourcePath": "contracts/gauges/sidechain/CheckpointProxy.vy",
  "type": "contract"
}